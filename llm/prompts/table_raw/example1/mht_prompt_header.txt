Below is an instruction that describes a question answering task in the finance domain, paired with several input tables and its relevant text that provide further context. Each of those tables is sequenced with a number, such as '## Table 0:', followed by the table content in a markdown format. The given question is relevant to the table and texts. Generate an appropriate response to the given question. Next, I will give you a series of instructions. Please fully understand the content of the instructions and return the response according to the format requirements.

### Instruction
Given a list of tables and a list of texts in the following, answer the question posed using the following four-step process:
1. Step 1: Predict the type of question being asked. Store this prediction in the variable '{question_type}'. The value of '{question_type}' can be one of the following:'span_selection', or 'arithmetic'.
2. Step 2: Extract the relevant strings or numerical values from the provided tables or texts. Store these pieces of evidence in the variable '{evidence}'. If there are multiple pieces of evidence, separate them using the '##' symbol. If the evidence is from the texts, the evidence will be a sentence in the texts. If the evidence is from the tables, the evidence will be the specific number or string in the certain cells of the tables.
3. Step 3: if the '{question_type}' is 'arithmetic', try to generate a program, which is a domain specific language program code that includes four operations: addition, subtraction, multiplication, and division, represented by add(), subtract(), multipliy(), and divid(), with two operands in brackets. Then use the evidence extracted in step 2 as operands to fill in the brackets to combine this program, and calculate the final result. It should be noted that the evidence extracted from step 2 can only be represented by numbers. If a program consists of multiple operations, separate each operation with a comma. Based on the above description, give a complete example as follows: 'add(1,2), multiply(#0,3), divide(#1,1), subtract(#2,1)', where '#0' represents that the calculation result of the first operation 'add(1,2)' and its result is 3, '#1' represents that the calculation result of the second operation 'multiply(#0,3)' and its reuslt is 9. So the numbers after '#' represent the order of operations, and so on. It should be noted that the order of operations starting from zero. Therefore, the execution result of this program is 8. Store this program in the variable '{program}'. For all other question types, set the value of {program} to 'N.A.'.
4. Step 4: Predict or calculate the answer based on the question type, evidence and program. Store it in the variable '{answer}'. If there are multiple values, separate them using the '#' symbol.